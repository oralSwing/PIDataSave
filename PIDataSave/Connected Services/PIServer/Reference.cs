//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PIDataSave.PIServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="YDSM", ConfigurationName="PIServer.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MC_Unusable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MC_Unusable();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MC_Unusable", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MC_UnusableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MC_State", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MC_State();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MC_State", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MC_StateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/VolumeAvailable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VolumeAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/VolumeAvailable", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VolumeAvailableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetAllCoalYardInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCoalYardInfo(string yardstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetAllCoalYardInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCoalYardInfoAsync(string yardstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MD_Sorting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MD_Sorting(string MC_Selected_1st);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MD_Sorting", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MD_SortingAsync(string MC_Selected_1st);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/BW_State", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BW_State();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/BW_State", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BW_StateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/Blank_Sorting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Blank_Sorting(int volume);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/Blank_Sorting", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Blank_SortingAsync(int volume);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/JsonToBoilerDefault", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object JsonToBoilerDefault(string jsonStr, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/JsonToBoilerDefault", ReplyAction="*")]
        System.Threading.Tasks.Task<object> JsonToBoilerDefaultAsync(string jsonStr, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/CoalMix", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CoalMix(string icoalListStr, string accounting, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/CoalMix", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CoalMixAsync(string icoalListStr, string accounting, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/CoalMixOpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CoalMixOpt(string iCoalID, string iWeight, string iCoalListStr, string iBoilerSN, string boilerDefaultStr, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/CoalMixOpt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CoalMixOptAsync(string iCoalID, string iWeight, string iCoalListStr, string iBoilerSN, string boilerDefaultStr, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetSingleTGAndDTG", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSingleTGAndDTG(string report);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetSingleTGAndDTG", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleTGAndDTGAsync(string report);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/TG", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TG(string icoalListStr, string accounting, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/TG", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TGAsync(string icoalListStr, string accounting, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/DTG", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DTG(string icoalListStr, string accounting, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/DTG", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DTGAsync(string icoalListStr, string accounting, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MD_Unusable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MD_Unusable();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MD_Unusable", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MD_UnusableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/Blank_Unusable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Blank_Unusable();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/Blank_Unusable", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Blank_UnusableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/LMQStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LMQStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/LMQStates", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LMQStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PIValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PIValue(string PIPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PIValue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PIValueAsync(string PIPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalIdOnBelt10", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetCoalIdOnBelt10();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalIdOnBelt10", ReplyAction="*")]
        System.Threading.Tasks.Task GetCoalIdOnBelt10Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PITimedValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PITimedValue(string PIPoint, int Delay);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PITimedValue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PITimedValueAsync(string PIPoint, int Delay);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetCoalID(string company, int bucketNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalID", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetCoalIDAsync(string company, int bucketNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MCVolume", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MCVolume();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MCVolume", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MCVolumeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MCEdit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void MCEdit(string OldCoalIDs, int NewCoalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/MCEdit", ReplyAction="*")]
        System.Threading.Tasks.Task MCEditAsync(string OldCoalIDs, int NewCoalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalVolume", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double GetCoalVolume(int MC);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalVolume", ReplyAction="*")]
        System.Threading.Tasks.Task<double> GetCoalVolumeAsync(int MC);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetVolume", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double GetVolume(double MW);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetVolume", ReplyAction="*")]
        System.Threading.Tasks.Task<double> GetVolumeAsync(double MW);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/EditCoalYard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int EditCoalYard(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/EditCoalYard", ReplyAction="*")]
        System.Threading.Tasks.Task<int> EditCoalYardAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/ClearSeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ClearSeam(int StackID, int CoalID, string user, int index, string editBefore);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/ClearSeam", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ClearSeamAsync(int StackID, int CoalID, string user, int index, string editBefore);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetShipLatest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetShipLatest(string shipName);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetShipLatest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetShipLatestAsync(string shipName);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PIRead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PIRead(string sql, string piSrv);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PIRead", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PIReadAsync(string sql, string piSrv);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PICalc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PICalc(string expr, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/PICalc", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PICalcAsync(string expr, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/SendSampleCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendSampleCode(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/SendSampleCode", ReplyAction="*")]
        System.Threading.Tasks.Task SendSampleCodeAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/WorklistSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int WorklistSend(string worklist);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/WorklistSend", ReplyAction="*")]
        System.Threading.Tasks.Task<int> WorklistSendAsync(string worklist);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalConsumption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCoalConsumption(int year, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalConsumption", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCoalConsumptionAsync(int year, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalConsumptionTrend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCoalConsumptionTrend();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalConsumptionTrend", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCoalConsumptionTrendAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetShipWithPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetShipWithPrice(int offset, int limit, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetShipWithPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetShipWithPriceAsync(int offset, int limit, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalPriceTrend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCoalPriceTrend();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalPriceTrend", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCoalPriceTrendAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalYard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCoalYard();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetCoalYard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCoalYardAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetDuiQuContent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDuiQuContent();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetDuiQuContent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDuiQuContentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetShippingListContent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetShippingListContent();
        
        [System.ServiceModel.OperationContractAttribute(Action="YDSM/GetShippingListContent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetShippingListContentAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : PIDataSave.PIServer.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<PIDataSave.PIServer.WebService1Soap>, PIDataSave.PIServer.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string MC_Unusable() {
            return base.Channel.MC_Unusable();
        }
        
        public System.Threading.Tasks.Task<string> MC_UnusableAsync() {
            return base.Channel.MC_UnusableAsync();
        }
        
        public string MC_State() {
            return base.Channel.MC_State();
        }
        
        public System.Threading.Tasks.Task<string> MC_StateAsync() {
            return base.Channel.MC_StateAsync();
        }
        
        public string VolumeAvailable() {
            return base.Channel.VolumeAvailable();
        }
        
        public System.Threading.Tasks.Task<string> VolumeAvailableAsync() {
            return base.Channel.VolumeAvailableAsync();
        }
        
        public string GetAllCoalYardInfo(string yardstr) {
            return base.Channel.GetAllCoalYardInfo(yardstr);
        }
        
        public System.Threading.Tasks.Task<string> GetAllCoalYardInfoAsync(string yardstr) {
            return base.Channel.GetAllCoalYardInfoAsync(yardstr);
        }
        
        public string MD_Sorting(string MC_Selected_1st) {
            return base.Channel.MD_Sorting(MC_Selected_1st);
        }
        
        public System.Threading.Tasks.Task<string> MD_SortingAsync(string MC_Selected_1st) {
            return base.Channel.MD_SortingAsync(MC_Selected_1st);
        }
        
        public string BW_State() {
            return base.Channel.BW_State();
        }
        
        public System.Threading.Tasks.Task<string> BW_StateAsync() {
            return base.Channel.BW_StateAsync();
        }
        
        public string Blank_Sorting(int volume) {
            return base.Channel.Blank_Sorting(volume);
        }
        
        public System.Threading.Tasks.Task<string> Blank_SortingAsync(int volume) {
            return base.Channel.Blank_SortingAsync(volume);
        }
        
        public object JsonToBoilerDefault(string jsonStr, string company) {
            return base.Channel.JsonToBoilerDefault(jsonStr, company);
        }
        
        public System.Threading.Tasks.Task<object> JsonToBoilerDefaultAsync(string jsonStr, string company) {
            return base.Channel.JsonToBoilerDefaultAsync(jsonStr, company);
        }
        
        public string CoalMix(string icoalListStr, string accounting, string company) {
            return base.Channel.CoalMix(icoalListStr, accounting, company);
        }
        
        public System.Threading.Tasks.Task<string> CoalMixAsync(string icoalListStr, string accounting, string company) {
            return base.Channel.CoalMixAsync(icoalListStr, accounting, company);
        }
        
        public string CoalMixOpt(string iCoalID, string iWeight, string iCoalListStr, string iBoilerSN, string boilerDefaultStr, string company) {
            return base.Channel.CoalMixOpt(iCoalID, iWeight, iCoalListStr, iBoilerSN, boilerDefaultStr, company);
        }
        
        public System.Threading.Tasks.Task<string> CoalMixOptAsync(string iCoalID, string iWeight, string iCoalListStr, string iBoilerSN, string boilerDefaultStr, string company) {
            return base.Channel.CoalMixOptAsync(iCoalID, iWeight, iCoalListStr, iBoilerSN, boilerDefaultStr, company);
        }
        
        public string GetSingleTGAndDTG(string report) {
            return base.Channel.GetSingleTGAndDTG(report);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleTGAndDTGAsync(string report) {
            return base.Channel.GetSingleTGAndDTGAsync(report);
        }
        
        public string TG(string icoalListStr, string accounting, string company) {
            return base.Channel.TG(icoalListStr, accounting, company);
        }
        
        public System.Threading.Tasks.Task<string> TGAsync(string icoalListStr, string accounting, string company) {
            return base.Channel.TGAsync(icoalListStr, accounting, company);
        }
        
        public string DTG(string icoalListStr, string accounting, string company) {
            return base.Channel.DTG(icoalListStr, accounting, company);
        }
        
        public System.Threading.Tasks.Task<string> DTGAsync(string icoalListStr, string accounting, string company) {
            return base.Channel.DTGAsync(icoalListStr, accounting, company);
        }
        
        public string MD_Unusable() {
            return base.Channel.MD_Unusable();
        }
        
        public System.Threading.Tasks.Task<string> MD_UnusableAsync() {
            return base.Channel.MD_UnusableAsync();
        }
        
        public string Blank_Unusable() {
            return base.Channel.Blank_Unusable();
        }
        
        public System.Threading.Tasks.Task<string> Blank_UnusableAsync() {
            return base.Channel.Blank_UnusableAsync();
        }
        
        public string LMQStates() {
            return base.Channel.LMQStates();
        }
        
        public System.Threading.Tasks.Task<string> LMQStatesAsync() {
            return base.Channel.LMQStatesAsync();
        }
        
        public string PIValue(string PIPoint) {
            return base.Channel.PIValue(PIPoint);
        }
        
        public System.Threading.Tasks.Task<string> PIValueAsync(string PIPoint) {
            return base.Channel.PIValueAsync(PIPoint);
        }
        
        public void GetCoalIdOnBelt10() {
            base.Channel.GetCoalIdOnBelt10();
        }
        
        public System.Threading.Tasks.Task GetCoalIdOnBelt10Async() {
            return base.Channel.GetCoalIdOnBelt10Async();
        }
        
        public string PITimedValue(string PIPoint, int Delay) {
            return base.Channel.PITimedValue(PIPoint, Delay);
        }
        
        public System.Threading.Tasks.Task<string> PITimedValueAsync(string PIPoint, int Delay) {
            return base.Channel.PITimedValueAsync(PIPoint, Delay);
        }
        
        public int GetCoalID(string company, int bucketNumber) {
            return base.Channel.GetCoalID(company, bucketNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetCoalIDAsync(string company, int bucketNumber) {
            return base.Channel.GetCoalIDAsync(company, bucketNumber);
        }
        
        public string MCVolume() {
            return base.Channel.MCVolume();
        }
        
        public System.Threading.Tasks.Task<string> MCVolumeAsync() {
            return base.Channel.MCVolumeAsync();
        }
        
        public void MCEdit(string OldCoalIDs, int NewCoalID) {
            base.Channel.MCEdit(OldCoalIDs, NewCoalID);
        }
        
        public System.Threading.Tasks.Task MCEditAsync(string OldCoalIDs, int NewCoalID) {
            return base.Channel.MCEditAsync(OldCoalIDs, NewCoalID);
        }
        
        public double GetCoalVolume(int MC) {
            return base.Channel.GetCoalVolume(MC);
        }
        
        public System.Threading.Tasks.Task<double> GetCoalVolumeAsync(int MC) {
            return base.Channel.GetCoalVolumeAsync(MC);
        }
        
        public double GetVolume(double MW) {
            return base.Channel.GetVolume(MW);
        }
        
        public System.Threading.Tasks.Task<double> GetVolumeAsync(double MW) {
            return base.Channel.GetVolumeAsync(MW);
        }
        
        public int EditCoalYard(string str) {
            return base.Channel.EditCoalYard(str);
        }
        
        public System.Threading.Tasks.Task<int> EditCoalYardAsync(string str) {
            return base.Channel.EditCoalYardAsync(str);
        }
        
        public int ClearSeam(int StackID, int CoalID, string user, int index, string editBefore) {
            return base.Channel.ClearSeam(StackID, CoalID, user, index, editBefore);
        }
        
        public System.Threading.Tasks.Task<int> ClearSeamAsync(int StackID, int CoalID, string user, int index, string editBefore) {
            return base.Channel.ClearSeamAsync(StackID, CoalID, user, index, editBefore);
        }
        
        public string GetShipLatest(string shipName) {
            return base.Channel.GetShipLatest(shipName);
        }
        
        public System.Threading.Tasks.Task<string> GetShipLatestAsync(string shipName) {
            return base.Channel.GetShipLatestAsync(shipName);
        }
        
        public string PIRead(string sql, string piSrv) {
            return base.Channel.PIRead(sql, piSrv);
        }
        
        public System.Threading.Tasks.Task<string> PIReadAsync(string sql, string piSrv) {
            return base.Channel.PIReadAsync(sql, piSrv);
        }
        
        public string PICalc(string expr, string time) {
            return base.Channel.PICalc(expr, time);
        }
        
        public System.Threading.Tasks.Task<string> PICalcAsync(string expr, string time) {
            return base.Channel.PICalcAsync(expr, time);
        }
        
        public void SendSampleCode(string data) {
            base.Channel.SendSampleCode(data);
        }
        
        public System.Threading.Tasks.Task SendSampleCodeAsync(string data) {
            return base.Channel.SendSampleCodeAsync(data);
        }
        
        public int WorklistSend(string worklist) {
            return base.Channel.WorklistSend(worklist);
        }
        
        public System.Threading.Tasks.Task<int> WorklistSendAsync(string worklist) {
            return base.Channel.WorklistSendAsync(worklist);
        }
        
        public string GetCoalConsumption(int year, int month) {
            return base.Channel.GetCoalConsumption(year, month);
        }
        
        public System.Threading.Tasks.Task<string> GetCoalConsumptionAsync(int year, int month) {
            return base.Channel.GetCoalConsumptionAsync(year, month);
        }
        
        public string GetCoalConsumptionTrend() {
            return base.Channel.GetCoalConsumptionTrend();
        }
        
        public System.Threading.Tasks.Task<string> GetCoalConsumptionTrendAsync() {
            return base.Channel.GetCoalConsumptionTrendAsync();
        }
        
        public string GetShipWithPrice(int offset, int limit, string search) {
            return base.Channel.GetShipWithPrice(offset, limit, search);
        }
        
        public System.Threading.Tasks.Task<string> GetShipWithPriceAsync(int offset, int limit, string search) {
            return base.Channel.GetShipWithPriceAsync(offset, limit, search);
        }
        
        public string GetCoalPriceTrend() {
            return base.Channel.GetCoalPriceTrend();
        }
        
        public System.Threading.Tasks.Task<string> GetCoalPriceTrendAsync() {
            return base.Channel.GetCoalPriceTrendAsync();
        }
        
        public string GetCoalYard() {
            return base.Channel.GetCoalYard();
        }
        
        public System.Threading.Tasks.Task<string> GetCoalYardAsync() {
            return base.Channel.GetCoalYardAsync();
        }
        
        public string GetDuiQuContent() {
            return base.Channel.GetDuiQuContent();
        }
        
        public System.Threading.Tasks.Task<string> GetDuiQuContentAsync() {
            return base.Channel.GetDuiQuContentAsync();
        }
        
        public string GetShippingListContent() {
            return base.Channel.GetShippingListContent();
        }
        
        public System.Threading.Tasks.Task<string> GetShippingListContentAsync() {
            return base.Channel.GetShippingListContentAsync();
        }
    }
}
